# GitHub Action 설정
name: 🚀 Build & Deploy workflow on production environment

on:
  pull_request:
    branches: [main]
    types: [closed]

jobs:
  build:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest

    steps:
      - name: ✅ Checkout branch
        uses: actions/checkout@v3

      - name: 📀 Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'corretto'

      - name: 💽 Make application-db.yml
        run: |
          cd ./src/main/resources
          touch ./application-db.yml
          echo "${{ secrets.SPRING_DB_CONFIG }}" >> ./application-db.yml
        shell: bash

      - name: 🔑 Make application-auth.yml
        run: |
          cd ./src/main/resources
          touch ./application-auth.yml
          echo "${{ secrets.SPRING_AUTH_CONFIG }}" > ./application-auth.yml
        shell: bash

      - name: ✨ Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: 🔨 Build with Gradle
        uses: gradle/gradle-build-action@v2
        with:
          arguments: clean build -x test
          gradle-version: 8.3

  deploy:
    needs: build
    if: github.event.pull_request.merged == true
    env:
      ENV_PATH: ./src/main/resources
      ENV_DB: application-db.yml
      ENV_AUTH: application-auth.yml
      CODE_DEPLOY_APPLICATION_NAME: us-server
      CODE_DEPLOY_GROUP_NAME: us-server-deploy
    runs-on: ubuntu-latest
    steps:
      - name: ✅ Checkout branch
        uses: actions/checkout@v3

      - name: ⚙️ Create application-*.yml files
        run: |
          touch ${{ ENV_PATH }}/${{ env.ENV_DB }}
          touch ${{ ENV_PATH }}/${{ env.ENV_AUTH }}
          echo "${{ secrets.SPRING_DB_CONFIG }}" >> ${{ ENV_PATH }}/${{ env.ENV_DB }}
          echo "${{ secrets.SPRING_AUTH_CONFIG }}" >> ${{ ENV_PATH }}/${{ env.ENV_AUTH }}

      - name: 📦 Zip project files
        run: zip -r ./$GITHUB_SHA.zip .

      - name: 🌎 Access to AWS
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-2

      - name: 🚛 Upload to S3
        run: |
          aws deploy push \
            --application-name ${{env.CODE_DEPLOY_APPLICATION_NAME}} \
            --ignore-hidden-files \
            --s3-location s3://${{secrets.S3_BUCKET_NAME}}/$GITHUB_SHA.zip \
            --source .

      - name: 🚀 Deploy to EC2 with CodeDeploy
        run: |
          aws deploy create-deployment \
            --application-name ${{env.CODE_DEPLOY_APPLICATION_NAME}} \
            --deployment-config-name CodeDeployDefault.AllAtOnce \
            --deployment-group-name ${{ env.CODE_DEPLOY_GROUP_NAME }} \
            --s3-location bucket=${{ secrets.S3_BUCKET_NAME }},bundleType=zip,key=$GITHUB_SHA.zip
