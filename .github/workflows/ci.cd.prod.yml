# GitHub Action 설정
name: 🚀 Build & Deploy workflow environment

on:
  pull_request:
    branches: [main]
    types: [closed]
#  push: #test용
#    branches: [main]

jobs:
  build:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    env:
      ENV_PATH: ./src/main/resources
      ENV_DB: application-db.yml
      ENV_AUTH: application-auth.yml
      DOCKER_IMAGE_NAME: us-server
      DOCKER_IMAGE_TAG: deploy
    steps:
      - name: ✅ Checkout branch
        uses: actions/checkout@v3

      - name: 📀 Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'corretto'

      - name: 💽 Make application-db.yml
        run: |
          cd ${{ env.ENV_PATH }}
          touch ${{ env.ENV_DB }}
          echo "${{ secrets.SPRING_DB_CONFIG }}" >> ${{ env.ENV_DB }}
        shell: bash

      - name: 🔑 Make application-auth.yml
        run: |
          cd ${{ env.ENV_PATH }}
          touch ${{ env.ENV_AUTH }}
          echo "${{ secrets.SPRING_AUTH_CONFIG }}" > ${{ env.ENV_AUTH }}
        shell: bash

      - name: ✨ Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: 🔨 Build with Gradle
        uses: gradle/gradle-build-action@v2
        with:
          arguments: clean build -x test
          gradle-version: 8.3

      - name: 🐳 Build Docker Image
        run: |
          docker build -t ${{ secrets.DOCKERHUB_USERNAME}}/${{ env.DOCKER_IMAGE_NAME }}:${{ env.DOCKER_IMAGE_TAG }} .

      - name: 🌎 Login DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: 🐋 Push a Docker Image to DockerHub
        run: |
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.DOCKER_IMAGE_NAME }}:${{ env.DOCKER_IMAGE_TAG }}
#  test:
#    # if: github.event.pull_request.merged == true
#    runs-on: ubuntu-latest
#    env:
#      ENV_PATH: ./src/main/resources
#      ENV_DB: application-db.yml
#      ENV_AUTH: application-auth.yml
#      DOCKER_IMAGE_NAME: us-server
#      DOCKER_IMAGE_TAG: deploy
#    steps:
#      - name: ✅ Checkout branch
#        uses: actions/checkout@v3
#
#      - name: 📀 Set up JDK 17
#        uses: actions/setup-java@v3
#        with:
#          java-version: '17'
#          distribution: 'corretto'
#
#      - name: 💽 Make application-db.yml
#        run: |
#          cd ${{ env.ENV_PATH }}
#          touch ${{ env.ENV_DB }}
#          echo "${{ secrets.SPRING_DB_CONFIG }}" >> ${{ env.ENV_DB }}
#        shell: bash
#
#      - name: 🔑 Make application-auth.yml
#        run: |
#          cd ${{ env.ENV_PATH }}
#          touch ${{ env.ENV_AUTH }}
#          echo "${{ secrets.SPRING_AUTH_CONFIG }}" > ${{ env.ENV_AUTH }}
#        shell: bash
#
#      - name: ✨ Grant execute permission for gradlew
#        run: chmod +x gradlew
#
#      - name: 📊 test with Gradle
#        uses: gradle/gradle-build-action@v2
#        with:
#          arguments: test
#          gradle-version: 8.3

  deploy:
    needs: build
    runs-on: self-hosted
    env:
      DOCKER_IMAGE_NAME: us-server
      DOCKER_IMAGE_TAG: deploy
    steps:
      - name: Pull Latest Image
        run: |
          sudo docker pull ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.DOCKER_IMAGE_NAME }}:${{ env.DOCKER_IMAGE_TAG }}

      - name: Stop Current Running Container
        run: |
          sudo docker stop $(sudo docker ps -q) 2>/dev/null || true

      - name: Run Latest Image
        run: |
          sudo docker run --name api-server --rm -d -p 8080:8080 ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.DOCKER_IMAGE_NAME }}:${{ env.DOCKER_IMAGE_TAG }}

      - name: Delete Old Image
        run: |
          sudo docker system prune -f
